library(tidyverse)
library(lubridate)
library(lubridate)
library(janitor)
library(tseries)
library(forecast)
# Monthly CPI (index 1982-1984=100)
cpi = read.csv("CPIAUCNS.csv") %>%
rename(cpi = CPIAUCNS) %>%
select(cpi) %>%
ts(frequency=12, start=c(2012, 1))
# Monthly BTC trading volume (USD)
btc = read.csv("/datasets/bitcoinity_data.csv") %>%
transmute(volume = select(., bit.x:others) %>% rowSums(na.rm=TRUE)) %>%
ts(frequency=12, start=c(2012, 1))
setwd("C:/MSBA/BZAN 548/bzan548-fed-vs-btc/datasets")
# Monthly BTC trading volume (USD)
btc = read.csv("bitcoinity_data.csv") %>%
transmute(volume = select(., bit.x:others) %>% rowSums(na.rm=TRUE)) %>%
ts(frequency=12, start=c(2012, 1))
# Monthly CPI (index 1982-1984=100)
cpi = read.csv("CPIAUCNS.csv") %>%
rename(cpi = CPIAUCNS) %>%
select(cpi) %>%
ts(frequency=12, start=c(2012, 1))
# Monthly M2 money supply (billions of dollars)
m_2 = read.csv("M2NS.csv") %>%
rename(M2 = M2NS) %>%
select(M2) %>%
ts(frequency=12, start=c(2012, 1))
cpi1 = window(cpi, start=c(2020,1)); m2.1 = window(m_2, start=c(2020,1))
plot.ts(cpi1); plot.ts(m2.1)
par(mfrow=c(1,2))
plot.ts(cpi1); plot.ts(m2.1)
par(mfrow=c(2,1))
plot.ts(cpi1); plot.ts(m2.1)
library(tseries)
library(forecast)
library(MTS)
library(lmtest)
econdata = read.csv(file.choose())
Y = econdata[,2:4] #exclude data column
Y$Rate = ts(Y$Rate, frequency = 12, start = c(1960,1))
Y$Inflation = ts(Y$Inflation, frequency = 12, start = c(1960,1))
Y$Unemployment = ts(Y$Unemployment, frequency = 12, start = c(1960,1))
plot.ts(Y)
# Monthly CPI (index 1982-1984=100)
cpi = read.csv("CPIAUCNS.csv") %>%
rename(cpi = CPIAUCNS) #%>%
View(cpi)
# Monthly M2 money supply (billions of dollars)
m_2 = read.csv("M2NS.csv") %>%
rename(M2 = M2NS) #%>%
View(cpi)
View(m_2)
Y = left_join(cpi, m_2, by="DATE")
Y = left_join(cpi, m_2, by="DATE")
Y$cpi = ts(Y$cpi, frequency=12, start=c(2012, 1))
Y$M2 = ts(M2, frequency=12, start=c(2012, 1))
plot.ts(Y)
View(Y)
names(Y)
Y$M2
Y$M2 = ts(Y$M2, frequency=12, start=c(2012, 1))
plot.ts(Y)
View(m_2)
View(Y)
Y = left_join(cpi, m_2, by="DATE") %>% select(-DATE)
Y$cpi = ts(Y$cpi, frequency=12, start=c(2012, 1))
Y$M2 = ts(Y$M2, frequency=12, start=c(2012, 1))
plot.ts(Y)
for (i in 1:2){
print(ndiffs(Y[,i], test="adf"))
print(ndiffs(Y[,i], test="kpss"))
}
names(Y)
library(tseries)
library(forecast)
library(MTS)
library(lmtest)
econdata = read.csv(file.choose())
Y = econdata[,2:4] #exclude data column
Y$Rate = ts(Y$Rate, frequency = 12, start = c(1960,1))
Y$Inflation = ts(Y$Inflation, frequency = 12, start = c(1960,1))
Y$Unemployment = ts(Y$Unemployment, frequency = 12, start = c(1960,1))
# plot.ts(Y)
print(ndiffs(Y[,i], test="adf"))
for (i in 1:3){
print(ndiffs(Y[,i], test="adf"))
print(ndiffs(Y[,i], test="kpss"))
}
Y_diff = data.frame(apply(Y, MARGIN=2, FUN=diff))
grangertest(Inflation ~ Rate, data=Y_diff, order=24) # p.val<<<0.05, rate IS needed to predict inflation
